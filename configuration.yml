---
- name: Configure Ansible Controller
  hosts: ansible-lab-controller
  tasks: 
  - name: Ensure latest ansible version
    become: yes
    ansible.builtin.package:
      name:
      - ansible
      - git
      state: latest

- name: Universal host configuration
  hosts: ansible_lab_hosts
  vars:
    ansible_become: true
  roles:
  - role: ansible-hardening
    tags: hardening
    vars:
      stig_version: rhel7
      security_enable_pwquality_password_set: yes
      security_password_max_lifetime_days: 90

- name: Configure DNS Server
  hosts: ansible-lab-host1
  vars:
    ansible_become: true
  tasks:
  - name: Install dnsmasq
    ansible.builtin.package:
      name: dnsmasq
      state: latest
  - name: Set local hostname
    ansible.builtin.lineinfile:
      path: /etc/hosts
      regexp: '^10\.1\.2\.4'
      line: '10.1.2.4 localhost {{ ansible_hostname }}'
  - name: Add Host2
    ansible.builtin.lineinfile:
      path: /etc/hosts
      regexp: '^10\.1\.2\.5'
      line: '10.1.2.5 ansible-lab-host2'
  - name: Add Host3
    ansible.builtin.lineinfile:
      path: /etc/hosts
      regexp: '^10\.1\.2\.6'
      line: '10.1.2.6 ansible-lab-host3'
  - name: Add Controller
    lineinfile:
      path: /etc/hosts
      regexp: '^10\.1\.1\.4'
      line: '10.1.1.4 ansible-lab-controller'
    notify: Restart dnsmasq
  - name: Disable existing DNS
    ansible.builtin.service:
      name: systemd-resolved
      enabled: no
      state: stopped
  - name: Set dnsmasq configuration file
    ansible.builtin.copy:
      src: files/dnsmasq.conf
      dest: /etc/dnsmasq.conf
      owner: root
      group: root
      mode: '0644'
    notify: Restart dnsmasq
  handlers:
    - name: Restart dnsmasq
      ansible.builtin.service:
        name: dnsmasq
        enabled: yes
        state: restarted
        
- name: Configure Samba Server
  hosts: ansible-lab-host2
  vars:
    ansible_become: true
  roles:
  - bertvv.samba

- name: Configure Samba client
  hosts: ansible-lab-host3
  tags: Samba
  vars:
    ansible_become: true
  tasks:
  - name: Install client deps
    package:
      name: cifs-utils
      state: latest
  - name: Create credential file
    template:
      src: ./files/.smbpasswd
      dest: /home/{{ admin_un }}./files/.smbpasswd
      owner: '{{ admin_un }}'
      group: '{{ admin_un }}'
      mode: '0600'
  - name: Add share mount
    mount:
      src: //10.1.2.5/srv/samba/testshare
      path: /mnt/smbshare
      fstype: "cifs"
      opts: credentials=/home/{{ admin_un }}/.smbpasswd
      state: "mounted"
  - name: Set mount as writeable
    file:
      path: /mnt/smbshare
      state: directory
      mode: '0777'
